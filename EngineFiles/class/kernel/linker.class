<?
/**
* Copyright (C) 2002 SIA ESOFTS.
*
* This program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public License 
* version 2 as published by the Free Software Foundation.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the SIA ESOFTS, 38/40 Blaumana str., 
* Riga, LV - 1011, LATVIA, e-mail office@esoft.lv 
*
* This General Public License does not permit incorporating your program into
* proprietary programs. Should you require to License Open Effect under the
* commercial License, please contact SIA ESOFTS for up-to-date information.
*/



/***************************************
*  Linker class
*  Parent class for link between objects
*  
***************************************/


  class linkerClass {
     var $className = "linkerClass"; // Class name
     var $parent;  // pointer on parent object
     var $childs;  // Array of child objects
     var $kernel;  // pointer on kernel object
       
     
     // Constructor
     // $parent - pointer on parent class
     function __construct(&$parent) {
        $this->parent = &$parent;         // create pointer on parent object
	$this->kernel = &$parent->kernel; // create pointer on kernel object
     }
     
     // Add child object
     // $obj - Child object which will be add
     function addChild($obj) {
        $this->childs[] = $obj;
	return $this->childs[count($this->childs) - 1];
     }

     // Delete child object
     // $offset - Offset of delete object 
     // $cnt    - counts of delete objects start from offset
     function delChild($offset, $cnt = 1) {
        if ($offset + 1 <= count($this->childs)) return false;
        array_splice($this->childs, $offset, $cnt);
	return true;
     }

  } // finished LINKER class
 
?>
